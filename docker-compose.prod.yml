version: "3.9"
services:
  builder:
    build:
      context: .
      dockerfile: .docker/Dockerfile.builder
      args:
        APP_URL: ${APP_URL}
    image: builder:latest
    container_name: builder
  nginx:
    build:
      context: .
      dockerfile: .docker/nginx/Dockerfile.nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - app
      - db
      - supervisor
    networks:
      - api_network
    volumes:
      - nginx:/etc/nginx/http.d
      - certs:/etc/letsencrypt
  app:
    build:
      context: .
      dockerfile: .docker/Dockerfile.prod
    container_name: app
    env_file:
      - .env
    tty: true
    networks:
      - api_network
    volumes:
      - storage:/var/www/html/storage
  supervisor:
    build:
      context: .
      dockerfile: .docker/supervisor/Dockerfile.supervisor
    volumes:
      - storage:/var/www/html/storage
    networks:
      - api_network
    env_file:
      - .env
  db:
    image: postgres:15.3-alpine3.18
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - dbData:/var/lib/postgresql/data
    networks:
      - api_network
# Docker Networks
networks:
  api_network:
    driver: bridge
# Volumes
volumes:
  dbData:
  storage:
  nginx:
  certs: