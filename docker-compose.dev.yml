version: '3.3'
services:
  nginx:
    image: nginx:1.21.1-alpine
    container_name: nginx
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public
      - .docker/nginx/http.d/:/etc/nginx/http.d
      - .docker/nginx/nginx.conf/:/etc/nginx/nginx.conf
    depends_on:
      - php
      - postgres
    networks:
      - api_network
  php:
    build:
      context: .
      dockerfile: .docker/Dockerfile.dev
      args: 
        GID: ${GUID}
        UID: ${UID}
        USER: laravel
    container_name: php
    env_file:
      - .env
    volumes:
      - .:/var/www/html
      - .docker/php:/etc/php7
    working_dir: /var/www/html
    tty: true
    expose:
      - "9000"
    networks:
      - api_network
    depends_on:
      - postgres
  postgres:
    image: postgres:13.3-alpine3.13
    restart: always
    environment:
      - POSTGRES_USER=places_api
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=places_api_database
    ports:
      - "5432:5432"
    # volumes:
    # - .docker/postgresql/data:/var/lib/postgresql/data
    networks:
      - api_network
  composer:
    build:
      context: .
      dockerfile: .docker/utilities/Dockerfile.composer
      args: 
        GID: ${GUID}
        UID: ${UID}
        USER: laravel
    container_name: composer
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    networks:
      - api_network
  artisan:
    build:
      context: .
      dockerfile: .docker/Dockerfile.dev
      args: 
        GID: ${GUID}
        UID: ${UID}
        USER: laravel
    container_name: artisan
    volumes:
      - .:/var/www/html
    depends_on:
      - postgres
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - api_network
  npm:
    build:
      context: .
      dockerfile: .docker/utilities/Dockerfile.node
      args: 
        GID: ${GUID}
        UID: ${UID}
        USER: laravel
    volumes:
        - .:/app
    entrypoint: ["npm"]
  test:
    build:
      context: .
      dockerfile: .docker/Dockerfile.dev
      args: 
        GID: ${GUID}
        UID: ${UID}
        USER: laravel
    container_name: artisan
    volumes:
      - .:/var/www/html
    depends_on:
      - postgres
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/vendor/bin/phpunit']
    networks:
      - api_network
# Docker Networks
networks:
  api_network:
    driver: bridge
